name: Build and Deploy Vite Project

on:
  push:
    branches:
      - master

jobs:
  web-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      - name: Syncs file
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: '22'
          script: |
            cd /home/${{ secrets.SSH_USER }}/deployment/speechsense
            git pull origin master
      - name: 'Create env file'
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: '22'
          script: |
            cd /home/${{ secrets.SSH_USER }}/deployment/speechsense
            touch .env
            echo NODE_ENV=${{ secrets.NODE_ENV }} >> .env
            echo DB_HOST=${{ secrets.DB_HOST }} >> .env
            echo DB_PORT=${{ secrets.DB_PORT }} >> .env
            echo DB_USERNAME=${{ secrets.DB_USERNAME }} >> .env
            echo DB_PASSWORD=${{ secrets.DB_PASSWORD }} >> .env
            echo DB_NAME=${{ secrets.DB_NAME }} >> .env
            echo JWT_SECRET=${{ secrets.JWT_SECRET }} >> .env
            echo JWT_DEVICE_SECRET=${{ secrets.JWT_DEVICE_SECRET }} >> .env
            echo ACCESS_TOKEN_DURATION=${{ secrets.ACCESS_TOKEN_DURATION }} >> .env
            echo REFRESH_TOKEN_DURATION=${{ secrets.REFRESH_TOKEN_DURATION }} >> .env
            echo EMAIL_TOKEN_DURATION=${{ secrets.EMAIL_TOKEN_DURATION }} >> .env
            echo CLIENT_URL=${{ secrets.CLIENT_URL }} >> .env
            echo CLIENT_VERIFICATION_ROUTE=${{ secrets.CLIENT_VERIFICATION_ROUTE }} >> .env
            echo CLIENT_RESET_PASSWORD_ROUTE=${{ secrets.CLIENT_RESET_PASSWORD_ROUTE }} >> .env
            echo AUDIO_METRICS_BACKEND_URL=${{ secrets.AUDIO_METRICS_BACKEND_URL }} >> .env
            echo SALT_ROUNDS=${{ secrets.SALT_ROUNDS }} >> .env
            echo EMAIL_SERVICE=${{ secrets.EMAIL_SERVICE }} >> .env
            echo EMAIL_HOST=${{ secrets.EMAIL_HOST }} >> .env
            echo EMAIL_USER=${{ secrets.EMAIL_USER }} >> .env
            echo EMAIL_PASSWORD=${{ secrets.EMAIL_PASSWORD }} >> .env
            echo AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} >> .env
            echo AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} >> .env
            echo AWS_PUBLIC_BUCKET_NAME=${{ secrets.AWS_PUBLIC_BUCKET_NAME }} >> .env
            echo AWS_REGION=${{ secrets.AWS_REGION }} >> .env
            echo RABBITMQ_USERNAME=${{ secrets.RABBITMQ_USERNAME }} >> .env
            echo RABBITMQ_PASSWORD=${{ secrets.RABBITMQ_PASSWORD }} >> .env
            echo RABBITMQ_HOST=${{ secrets.RABBITMQ_HOST }} >> .env
            echo RABBITMQ_PORT=${{ secrets.RABBITMQ_PORT }} >> .env
            echo RABBITMQ_EXCHANGE_NAME=${{ secrets.RABBITMQ_EXCHANGE_NAME }} >> .env
      - name: Run application
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: '22'
          script: |
            cd /home/${{ secrets.SSH_USER }}/deployment/speechsense
            npm install && npm run build
            cp /home/${{ secrets.SSH_USER }}/deployment/ecosystem.config.js /home/${{ secrets.SSH_USER }}/deployment/speechsense/ecosystem.config.js
            sudo pm2 restart ./ecosystem.config.js
